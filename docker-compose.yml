version: '3.9'

services:
  database:
    build:
      context: .
      dockerfile: docker/database/Dockerfile
    container_name: project-database
    ports:
      - 1445:1433
    environment:
      ACCEPT_EULA: Y
      SA_PASSWORD: ${DB_PASSWORD}
    volumes:
      - ./mssql-data:/var/opt/mssql/data
      - ./database-scripts:/database-scripts
    restart: unless-stopped
    entrypoint: ["/database-scripts/entrypoint.sh"]
    healthcheck:
      test: ["CMD", "/opt/mssql-tools/bin/sqlcmd", "-S", "localhost", "-U", "sa", "-P", "${DB_PASSWORD}", "-Q", "SELECT 1"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 20s
    networks:
      - app-network

  backend:
    build: 
      context: .
      dockerfile: docker/be/Dockerfile
    container_name: project-backend
    ports:
      - 8080:8080
    environment:
      - SPRING_DATASOURCE_URL=jdbc:sqlserver://database:1433;databaseName=final;encrypt=true;trustServerCertificate=true
      - SPRING_DATASOURCE_USERNAME=sa
      - SPRING_DATASOURCE_PASSWORD=${DB_PASSWORD}
      - VNPAY_TMN_CODE=${VNPAY_TMN_CODE}
      - VNPAY_SECRET_KEY=${VNPAY_SECRET_KEY}
      - VNPAY_RETURN_URL=${VNPAY_RETURN_URL}
      - JWT_SECRET=${JWT_SECRET}
      - CLOUDINARY_CLOUD_NAME=${CLOUDINARY_CLOUD_NAME}
      - CLOUDINARY_API_SECRET=${CLOUDINARY_API_SECRET}
      - CLOUDINARY_API_KEY=${CLOUDINARY_API_KEY}
      - EMAIL_PASSWORD=${EMAIL_PASSWORD}
      - EMAIL_USERNAME=${EMAIL_USERNAME}
    depends_on:
      database:
        condition: service_healthy
    restart: unless-stopped
    networks:
      - app-network

  frontend:
    build: 
      context: .
      dockerfile: docker/fe/Dockerfile
    container_name: project-frontend
    ports:
      - 5173:5173
    depends_on:
      - backend
    restart: unless-stopped
    networks:
      - app-network

networks:
  app-network:
    driver: bridge

volumes:
  mssql-data:
    name: project-mssql-data
